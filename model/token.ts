/**
 * Bleumi Pay API
 * A simple and powerful REST API to integrate ERC-20, Ethereum, xDai payments and/or payouts into your business or application
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@bleumi.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { BadRequest } from "./badRequest";

export class Token {
    /**
    * ETH - for Ethereum ; XDAI - for xDai ; XDAIT - for xDai Testnet ; <contract address of ERC-20 token> - for ERC-20 Tokens;
    */
    //'addr': string;

    private _addr: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "addr",
            "baseName": "addr",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return Token.attributeTypeMap;
    }

    get addr(): string {
        return this._addr;
    }

    isToken(value: string) {
        var regex = /^0x[a-fA-F0-9]{40}$/
        if (regex.test(value)||(value=="ETH")||(value=="XDAI")||(value=="XDAIT")) {
            return true;
        } else {
            return false;
        }
    }

    set addr(address: string){
        if (this.isToken(address)) {
            this._addr = address;
        } else {
            var badRequest = new BadRequest();
            badRequest.errorCode = "400";
            badRequest.errorMessage = "Not a valid Token" ;
            throw badRequest; 
        }
    }

    constructor(public address: string) {
        if (this.isToken(address)) {
            this._addr = address;
        } else {
            var badRequest = new BadRequest();
            badRequest.errorCode = "400";
            badRequest.errorMessage = "Not a valid Token" ;
            throw badRequest; 
        }
    }

}

